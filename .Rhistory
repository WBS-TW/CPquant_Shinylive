install.packages("shinylive")
install.packages("httpuv")
shiny::runApp()
shinylive::export(appdir = "../CPxplorer_Shinylive/", destdir = "docs")
httpuv::runStaticServer("docs/", port = 8008)
shinylive::export(appdir = "../CPxplorer_Shinylive/", destdir = "docs")
shinylive::export(appdir = "../CPquant_Shinylive/", destdir = "docs")
httpuv::runStaticServer("docs/", port = 8008)
shiny::runApp()
shinylive::export(appdir = "D:/R_projects/CPquant_Shinylive", destdir = "docs")
httpuv::runStaticServer("docs/", port = 8008)
shiny::runApp()
runApp()
runApp()
library(shinylive)
library(httpuv)
shinylive::export(appdir = "D:/R_projects/CPquant_Shinylive/", destdir = "docs")
httpuv::runStaticServer("docs/", port = 8008)
shiny::runApp()
wb <- openxlsx::createWorkbook()
# Add worksheets
openxlsx::addWorksheet(wb, "Quantification")
openxlsx::addWorksheet(wb, "StandardsContribution")
openxlsx::addWorksheet(wb, "HomologueDistribution")
# Write data to worksheets
openxlsx::writeData(wb, "Quantification",
deconvolution |>
dplyr::select(Replicate_Name, Sample_Type, Concentration, deconv_rsquared) |>
dplyr::mutate(deconv_rsquared = round(deconv_rsquared, 3)))
openxlsx::writeData(wb, "StandardsContribution",
deconvolution |>
unnest(deconv_coef) |>
unnest_longer(c(deconv_coef, Batch_Name)) |>
select(Replicate_Name, Batch_Name, deconv_coef) |>
mutate(deconv_coef = deconv_coef * 100) |>
pivot_wider(names_from = Batch_Name, values_from = deconv_coef))
openxlsx::writeData(wb, "HomologueDistribution",
deconvolution |>
mutate(data = map2(data, deconv_resolved, ~inner_join(.x, .y, by = "Molecule"))) |>
mutate(data = map(data, ~ .x |> mutate(resolved_distribution = deconv_resolved / sum(deconv_resolved)))) |>
select(-deconv_resolved) |>
unnest(data) |>
mutate(Deconvoluted_Distribution = as.numeric(resolved_distribution)) |>
rename(Relative_Distribution = Relative_Area) |>
select(-deconv_coef, -resolved_distribution, -Quantification_Group, -C_number, -Cl_number, -Area, -sum_Area,
-sum_deconv_RF, -Concentration, -deconv_resolved, -deconv_rsquared)
)
# Save workbook
openxlsx::saveWorkbook(wb, file)
?saveWorkbook
# Save workbook
openxlsx::saveWorkbook(wb, "AllQuantResults")
runApp()
shiny::runApp()
runApp()
runApp()
library(shinylive)
library(httpuv)
shinylive::export(appdir = "D:/R_projects/CPquant_Shinylive/", destdir = "docs")
httpuv::runStaticServer("docs/", port = 8008)
runApp()
shinylive::export(appdir = "D:/R_projects/CPquant_Shinylive/", destdir = "docs")
httpuv::runStaticServer("docs/", port = 8008)
shinylive::export(appdir = "D:/R_projects/CPquant_Shinylive/", destdir = "docs")
httpuv::runStaticServer("docs/", port = 8008)
?write_xlsx
httpuv::runStaticServer("docs/", port = 8008)
shiny::runApp()
library(shinylive)
library(httpuv)
shinylive::export(appdir = "D:/R_projects/CPquant_Shinylive/", destdir = "docs")
httpuv::runStaticServer("docs/", port = 8008)
